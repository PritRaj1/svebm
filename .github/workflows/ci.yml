name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    name: Test on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ["3.10.12", "3.11.9"]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Debug Python version
      run: echo "Setting up Python ${{ matrix.python-version }}"
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        
    - name: Run tests with coverage
      run: |
        python -m pytest tests/ -v --cov=src --cov-report=xml
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          htmlcov/
          .pytest_cache/
          logs/

  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11.9"
        
    - name: Install quality tools
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        
    - name: Check formatting
      run: |
        black --check --diff src/ tests/
        isort --check-only --diff src/ tests/
        
    - name: Run linting
      run: |
        flake8 src/ tests/ --max-line-length=88 --extend-ignore=E203,W503
        
    - name: Type checking
      run: |
        mypy src/ --ignore-missing-imports 